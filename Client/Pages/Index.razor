@page "/"
@using System.Net.Http.Json
@inject IJSRuntime JS
@inject HttpClient Http
@inject NavigationManager Nav

<div class="container-fluid p-0">

    <!-- Hero Section -->
    <section id="top" class="hero-section d-flex flex-column text-light">
        <div class="parallax-bg" id="hero-bg"></div>

        <div class="container d-flex flex-column justify-content-between" style="height: calc(100vh - 56px); position: relative; z-index:2;">

            <!-- Top: Logo and Company Name -->
            <div class="d-flex justify-content-center align-items-center flex-wrap mt-3 hero-top fade-in delay-0">
                <img src="/images/DTRL Logo.svg" alt="Drone Logo" class="hero-logo me-3 mb-2" />
                <img src="/images/DTRL Letterhead - Single Line.svg" alt="DiverseTech Robotics Ltd." class="hero-letterhead mb-2" />
            </div>

            <!-- Middle: Headline and subtitle -->
            <div class="hero-text text-center fade-in delay-1">
                <h1 class="hero-headline mb-3">Transcending Human Boundaries</h1>
                <p class="lead mb-0 hero-subtitle">For industry, construction, and environmental monitoring</p>
            </div>

            <!-- Bottom: Contact Us button -->
            <div class="hero-cta text-center mb-3 fade-in delay-2">
                <a href="#contact" class="btn btn-primary btn-lg">Contact Us</a>
            </div>

        </div>
    </section>

    <!-- Our Services -->
    <section id="services" class="container py-5">
        <h2 class="text-center mb-4">Our Services</h2>

        @if (!string.IsNullOrEmpty(loadError))
        {
            <div class="alert alert-danger" role="alert">
                Couldn’t load services: @loadError
            </div>
        }
        else if (services is null)
        {
            <p class="text-center">Loading services...</p>
        }
        else if (services.Count == 0)
        {
            <p class="text-center">No services are available yet.</p>
        }
        else
        {
            <div class="row text-center">
                @foreach (var service in services)
                {
                    <ServiceCard Service="service" />
                }
            </div>
        }
    </section>

    @* ------------ ONE BATCH CALL FOR ALL KEYS BELOW ------------ *@
    <CmsPreloadTxt Blocking="true"
                   Keys="@(new[] {
                                      "AboutUs.Lead",
                                      "ContactUs.Lead1", "ContactUs.Lead2",
                                      "ContactUs.Email", "ContactUs.Phone"
                                  })"
                   Placeholder="<p class='text-center my-5'>Loading content…</p>">

        <!-- About Us -->
        <section id="about" class="container py-5">
            <div class="row align-items-center g-4">
                <div class="col-12">
                    <h2 class="text-center mb-4">About Us</h2>
                </div>

                @* Lead copy *@
                <div class="col-lg-10 mx-auto">
                    <p class="lead text-center mb-4">
                        <CmsText Key="AboutUs.Lead"
                                 Fallback="At <strong>DiverseTech Robotics Ltd.</strong>, we deliver drone solutions for construction, industrial, and environmental monitoring—combining safety, quality, and efficiency." />
                    </p>
                </div>

                @* Three concise value props (optional, static text you can CMS-ify later) *@
                <div class="col-lg-10 mx-auto">
                    <div class="row g-3 justify-content-center">
                        <div class="col-md-4">
                            <div class="about-chip">
                                <div class="about-chip-icon" aria-hidden="true">🔧</div>
                                <div>
                                    <div class="about-chip-title">Industrial-grade results</div>
                                    <div class="about-chip-text">Data you can build on—repeatable, documented, and auditable.</div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="about-chip">
                                <div class="about-chip-icon" aria-hidden="true">🛰️</div>
                                <div>
                                    <div class="about-chip-title">Modern sensors</div>
                                    <div class="about-chip-text">High-res imagery, thermal, and multispectral options.</div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="about-chip">
                                <div class="about-chip-icon" aria-hidden="true">🛡️</div>
                                <div>
                                    <div class="about-chip-title">Safety first</div>
                                    <div class="about-chip-text">Licensed pilots, controlled workflows, and compliant ops.</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Contact Section -->
        <section id="contact" class="bg-light py-5">
            <div class="container">
                <h2 class="text-center mb-4">Contact Us</h2>

                <div class="row justify-content-center g-4">
                    @* Left: Contact info card with copy buttons *@
                    <div class="col-lg-5">
                        <div class="card h-100 shadow-sm contact-card">
                            <div class="card-body">
                                <p class="lead text-center mb-3">
                                    <CmsText Key="ContactUs.Lead1" Fallback="Have a project in mind or want to learn more about our services?" />
                                </p>
                                <p class="lead text-center mb-4">
                                    <CmsText Key="ContactUs.Lead2" Fallback="Get in touch with <strong>DiverseTech Robotics Ltd.</strong> today." />
                                </p>

                                <div class="contact-row">
                                    <div class="row align-items-center g-2">
                                        <div class="col-8 col-md-9">
                                            <div class="fw-semibold">Email</div>
                                            <div id="contact-email" class="text-body-secondary text-break">
                                                <CmsText Key="ContactUs.Email" Fallback="diversetechrobotics@gmail.com" />
                                            </div>
                                        </div>
                                        <div class="col-4 col-md-3 text-md-end">
                                            <div class="btn-group">
                                                <a class="btn btn-outline-primary btn-sm"
                                                   href="mailto:diversetechrobotics@gmail.com"
                                                   aria-label="Email us">
                                                    Email
                                                </a>
                                                <button type="button"
                                                        class="btn btn-outline-secondary btn-sm"
                                                        @onclick='() => CopyTextAsync("contact-email")'>
                                                    Copy
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="contact-row">
                                    <div class="row align-items-center g-2">
                                        <!-- Label + value take most of the width -->
                                        <div class="col-8 col-md-9">
                                            <div class="fw-semibold">Phone</div>
                                            <div id="contact-phone" class="text-body-secondary text-break">
                                                <CmsText Key="ContactUs.Phone" Fallback="+1 (204) 509-0729" />
                                            </div>
                                        </div>

                                        <!-- Actions use a fixed, narrower column -->
                                        <div class="col-4 col-md-3 text-md-end">
                                            <div class="btn-group">
                                                <a class="btn btn-outline-primary btn-sm"
                                                   href="tel:+12045090729"
                                                   aria-label="Call us">
                                                    Call
                                                </a>
                                                <button type="button"
                                                        class="btn btn-outline-secondary btn-sm"
                                                        @onclick='() => CopyTextAsync("contact-phone")'>
                                                    Copy
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @* subtle footer note *@
                            <div class="card-footer small text-body-secondary">
                                Business hours: Mon–Fri, 9:00–17:00 CT
                            </div>
                        </div>
                    </div>

                    @* Right: Accessible form with validation (client-side) *@
                    <div class="col-lg-7">
                        <div class="card shadow-sm">
                            <div class="card-body">
                                <EditForm Model="@contact" OnValidSubmit="@OnSubmitAsync">
                                    <DataAnnotationsValidator />
                                    <ValidationSummary />

                                    <div class="mb-3">
                                        <label for="name" class="form-label">Name</label>
                                        <InputText id="name" class="form-control" @bind-Value="contact.Name" />
                                        <ValidationMessage For="@(() => contact.Name)" />
                                    </div>

                                    <div class="mb-3">
                                        <label for="email" class="form-label">Email</label>
                                        <InputText id="email" class="form-control" type="email" @bind-Value="contact.Email" />
                                        <ValidationMessage For="@(() => contact.Email)" />
                                    </div>

                                    <div class="mb-3">
                                        <label for="message" class="form-label">Message</label>
                                        <InputTextArea id="message" class="form-control" rows="4" @bind-Value="contact.Message" />
                                        <ValidationMessage For="@(() => contact.Message)" />
                                    </div>

                                    @* simple honeypot *@
                                    <InputText class="d-none" @bind-Value="contact.Hp" autocomplete="off" />

                                    <div class="text-center">
                                        <button class="btn btn-primary btn-lg" disabled="@isSubmitting">
                                            @(isSubmitting ? "Sending…" : "Send Message")
                                        </button>
                                    </div>

                                    <div class="mt-3" aria-live="polite">
                                        @if (!string.IsNullOrEmpty(formStatus))
                                        {
                                            <div class="alert @statusClass" role="status">@formStatus</div>
                                        }
                                    </div>
                                </EditForm>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </CmsPreloadTxt>

    <!-- Footer -->
    <footer class="bg-dark text-light py-4 mt-5">
        <div class="container text-center">
            <p class="mb-0">&copy; @(DateTime.Now.Year) DiverseTech Robotics Ltd. | All Rights Reserved</p>
        </div>
    </footer>

</div>

@code {
    private List<Service>? services;
    private string? loadError;

    // Contact form model + status
    private ContactRequest contact = new();
    private bool isSubmitting;
    private string? formStatus;
    private string statusClass = "alert-success";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            services = await Http.GetFromJsonAsync<List<Service>>("api/services");
        }
        catch (Exception ex)
        {
            loadError = ex.Message;
            services = new();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("setupHeroParallax");
        }
    }

    private async Task CopyTextAsync(string elementId)
    {
        var ok = await JS.InvokeAsync<bool>("copyFromElement", elementId);
        formStatus = ok ? "Copied!" : "Couldn’t copy.";
        statusClass = ok ? "alert-success" : "alert-warning";
        StateHasChanged();
        await Task.Delay(1500);
        formStatus = null; StateHasChanged();
    }

    private async Task OnSubmitAsync()
    {
        if (!string.IsNullOrWhiteSpace(contact.Hp))
            return; // bot

        try
        {
            isSubmitting = true; formStatus = null;

            // TODO: integrate with an Azure Function (e.g., POST /api/contact)
            // For now, open a prefilled mailto as a fallback UX:
            var subject = Uri.EscapeDataString("Website inquiry");
            var body = Uri.EscapeDataString(
                $"Name: {contact.Name}\nEmail: {contact.Email}\n\n{contact.Message}"
            );

            // NOTE: this mailto uses your fallback email; once a /api/contact exists, replace.
            var mailto = $"mailto:diversetechrobotics@gmail.com?subject={subject}&body={body}";
            await JS.InvokeVoidAsync("open", mailto, "_self");

            formStatus = "Thanks! We’ll get back to you shortly.";
            statusClass = "alert-success";
            contact = new(); // reset
        }
        catch
        {
            formStatus = "Something went wrong sending your message. Please try again.";
            statusClass = "alert-danger";
        }
        finally
        {
            isSubmitting = false;
        }
    }

    public class ContactRequest
    {
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(80, MinimumLength = 2)]
        public string Name { get; set; } = "";

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.EmailAddress]
        public string Email { get; set; } = "";

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(4000, MinimumLength = 5)]
        public string Message { get; set; } = "";

        // honeypot
        public string? Hp { get; set; }
    }
}
